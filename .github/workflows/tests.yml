name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ci-requirements.txt
    
    - name: Build Rust extension
      run: |
        # Build the Rust extension using maturin
        pip install maturin
        maturin develop --release
    
    - name: Run Python tests
      run: |
        # Run the tests with pytest
        pytest python/tests/
    
    - name: Run Rust tests
      run: |
        # Run all Rust tests with verbose output
        cargo test --test test_rust_* -- --nocapture
        
        # If any test fails, print more detailed information
        if [ $? -ne 0 ]; then
          echo "Rust tests failed. Running with backtrace enabled..."
          RUST_BACKTRACE=1 cargo test --test test_rust_*
          exit 1
        fi